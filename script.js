// Parsing the HTML data to extract options
const parser = new DOMParser();
const doc = parser.parseFromString(htmlData, 'text/html');
const options = doc.querySelectorAll(
  <select class="w3-select" id="playerid" name="playerid">
    <option value="166">,</option>
    <option value="188">, Fred Guest</option>
    <option value="132">, Guest3</option>
    <option value="169">Albertson, John</option>
    <option value="192">Arganbright, Marty</option>
    <option value="121">Atkinson, John</option>
    <option value="31">Banker, Jeff</option>
    <option value="51">Banner, John</option>
    <option value="139">Barker, Thomas</option>
    <option value="176">Bates, Mike</option>
    <option value="235">Beck , Riley</option>
    <option value="259">Benevento, Marc</option>
    <option value="123">Brady, Kenny</option>
    <option value="195">Braydich, Nick</option>
    <option value="201">Brooks, Bill</option>
    <option value="155">Bujnak, Pete</option>
    <option value="101">Burghardt, Jeff</option>
    <option value="168">Butch, Kevin</option>
    <option value="207">Caminiti, Dom</option>
    <option value="203">Clark, Greg</option>
    <option value="150">Coakley, Rob</option>
    <option value="242">Comisar, Jason</option>
    <option value="109">Coon, Tom</option>
    <option value="152">Crawford , Dave</option>
    <option value="33">Cron, Tim</option>
    <option value="153">DeMattio , Don</option>
    <option value="6">Dennison, Allen</option>
    <option value="243">Dietz, Andy</option>
    <option value="115">Dietz, Chris</option>
    <option value="228">Dillon, Mike</option>
    <option value="12">Dippolito, John</option>
    <option value="231">Dwyer, Timothy</option>
    <option value="17">Edwards, Spencer</option>
    <option value="260">Emmenegger, Dan</option>
    <option value="174">English, Dennis</option>
    <option value="125">English, Denny</option>
    <option value="196">Erickson, Aunders</option>
    <option value="159">Evans, Danny</option>
    <option value="232">Ewald, Guest</option>
    <option value="130">Ewald, Shane</option>
    <option value="133">Eyen, Bob</option>
    <option value="241">Ferguson, Mike</option>
    <option value="32">Fields, Brandon</option>
    <option value="18">Fitori, Jim</option>
    <option value="161">Fitzpatrick, Guest</option>
    <option value="40">Fitzpatrick, Sean</option>
    <option value="28">Fitzsimmons, Greg</option>
    <option value="118">Flaherty, Kevin</option>
    <option value="55">Francisco, Jim</option>
    <option value="220">Gearhiser, Kurt</option>
    <option value="175">gerber, john</option>
    <option value="128">Gimeson, Curran</option>
    <option value="127">Gimeson, Jim</option>
    <option value="211">Gimeson, Paul</option>
    <option value="154">Gleaves, Greg</option>
    <option value="178">Glick, Jordan</option>
    <option value="23">Goetz, Nick</option>
    <option value="160">Goldsberry, Craig</option>
    <option value="258">Graham, Carl</option>
    <option value="35">Grim, Chris</option>
    <option value="26">Grim, Mark</option>
    <option value="250">Guest, (Dietz)</option>
    <option value="215">Guest, Dietz</option>
    <option value="255">Guest, Gerber</option>
    <option value="230">Guest, Kristoff</option>
    <option value="212">Guest, Sprankle</option>
    <option value="216">Guest #2, Dietz</option>
    <option value="217">Guest #3, Dietz</option>
    <option value="213">Guest 1, Sprankle</option>
    <option value="186">Hall, Tim</option>
    <option value="234">Hanks, David</option>
    <option value="189">Hart, Chuck</option>
    <option value="190">Heath, Joe</option>
    <option value="194">Heis, Adam</option>
    <option value="138">Herrick, Mike</option>
    <option value="43">Hickman, Tim</option>
    <option value="219">Hiers, Kyle</option>
    <option value="48">Hiers, Paul</option>
    <option value="206">Hiers, Wes</option>
    <option value="248">Hitch, David</option>
    <option value="183">Hocking, Kyle</option>
    <option value="167">Hook, Shane</option>
    <option value="144">Huss, Kyle</option>
    <option value="265">Janice, Rob</option>
    <option value="218">Johnson, Glenn</option>
    <option value="84">Jozefczyk, Harrison</option>
    <option value="54">Kauffman , Randy</option>
    <option value="221">Keener, Mike</option>
    <option value="9">Kendig, Shawn</option>
    <option value="177">Kennedy , Don</option>
    <option value="36">King, Mitch</option>
    <option value="158">Koehl, Kiki</option>
    <option value="20">Kramer, Brad</option>
    <option value="187">Kraynak, Michael</option>
    <option value="19">Kristoff, Jeff</option>
    <option value="253">Lacko, Alan</option>
    <option value="15">LaLonde, Brent</option>
    <option value="81">LaLonde, David</option>
    <option value="205">LeCrone, Brian</option>
    <option value="129">Lewis, Andy</option>
    <option value="222">M, I</option>
    <option value="233">Marbry, chris</option>
    <option value="210">Marton, Tyler</option>
    <option value="156">Matter, Kristen</option>
    <option value="98">Maunz, Brandon</option>
    <option value="197">McAninch, Sam</option>
    <option value="151">McCaffrey, Patrick</option>
    <option value="198">McCandless, Mike</option>
    <option value="11">McClure, Todd</option>
    <option value="13">McDaniel, Jay</option>
    <option value="46">Meikrantz, Dave</option>
    <option value="85">Meikrantz , Shelby</option>
    <option value="142">Mills, jeffrey</option>
    <option value="100">Minnie, Chris</option>
    <option value="254">Montello, Ben</option>
    <option value="104">Murphy, Spencer</option>
    <option value="199">Novosel, Todd</option>
    <option value="16">Padro, Rick</option>
    <option value="208">Palm, Bryce "plant"</option>
    <option value="141">Pappas, Peter</option>
    <option value="204">Parks, Guy</option>
    <option value="149">Parton, Kelly</option>
    <option value="264">Partridge, David</option>
    <option value="202">Peck, Nick</option>
    <option value="200">Peck, Steve</option>
    <option value="172">Perry, Justin</option>
    <option value="8">Pi, Mark</option>
    <option value="99">Politte, Jeffrey</option>
    <option value="163">Pratt, Lind</option>
    <option value="261">Proakis, Jake</option>
    <option value="96">Promenschenkel, George</option>
    <option value="147">Raines, Leila</option>
    <option value="251">Rath, Dave</option>
    <option value="10">Reda, Rob</option>
    <option value="193">Rice, Ryan</option>
    <option value="266">Riddle, Gary</option>
    <option value="263">Riley, Wes</option>
    <option value="268">Rini, Bill</option>
    <option value="224">Rubicky, Rob</option>
    <option value="267">Rumizen, Max</option>
    <option value="238">Russo, Bryan</option>
    <option value="164">Rutkoski, Jason</option>
    <option value="27">Salata, Parker</option>
    <option value="227">Salva, Heath</option>
    <option value="225">Santini, Jim</option>
    <option value="116">Savage, Sean</option>
    <option value="97">Schaffner, Jeff</option>
    <option value="105">Schmidt, Dustin</option>
    <option value="214">Sears, Rick</option>
    <option value="182">Secrest, Chad</option>
    <option value="145">Sever, Jeff</option>
    <option value="108">Sewell, Jon</option>
    <option value="223">Shannon, Derek</option>
    <option value="256">Shannon, Guest</option>
    <option value="173">Sickles, Corey</option>
    <option value="7">Smith, Keith</option>
    <option value="122">Smith, Nick</option>
    <option value="244">Spitzer, Ryan</option>
    <option value="44">Sprankle, Fred</option>
    <option value="45">Sprankle , Scott</option>
    <option value="226">Stacey, Larry</option>
    <option value="50">Staley, Mike</option>
    <option value="135">Staley, Scott</option>
    <option value="4">Steele, Alan</option>
    <option value="2">Steele, Chad</option>
    <option value="1">Steele, Matt</option>
    <option value="38">Steele, Spencer</option>
    <option value="171">Steininger, Aaron</option>
    <option value="29">Stevenson, Dan</option>
    <option value="47">Struewing, Ben</option>
    <option value="239">Taronto, Drew</option>
    <option value="229">Taylor , Layla</option>
    <option value="134">Taylor, Troy</option>
    <option value="148">Tepe, David</option>
    <option value="137">Thieman, Josh</option>
    <option value="136">Thieman, Mike</option>
    <option value="240">Toranato, Drew</option>
    <option value="170">Towel, Rick</option>
    <option value="140">Trabue, Hugh</option>
    <option value="252">Uehlein, Pat</option>
    <option value="53">Valentine , Travis</option>
    <option value="107">VanHala, Andrew</option>
    <option value="165">VanLandingham, Tyler</option>
    <option value="236">Vincent, Denny</option>
    <option value="237">Vosler, Guest</option>
    <option value="162">Vosler, Will</option>
    <option value="262">Walden, Jon</option>
    <option value="117">Walter, Dave</option>
    <option value="21">Watson, Brian</option>
    <option value="102">Weiss, Frank</option>
    <option value="209">Weiss, PJ</option>
    <option value="34">Welch, Dustin</option>
    <option value="269">Welch, Guest</option>
    <option value="270">Welch, Guest #2</option>
    <option value="14">West, Zach</option>
    <option value="110">Westerheide, Pete</option>
    <option value="157">White, Emily</option>
    <option value="30">Williamson, J</option>
    <option value="5">Wilson, Todd</option>
    <option value="3">Winhoven, Jason</option>
    <option value="185">Wissinger , Jared</option>
    <option value="249">Wolf, Josh</option>
    <option value="103">Wolff, Brett</option>
    <option value="82">Yeagle, Marcus</option>
    <option value="181">Zeller, Aaron</option>
    <option value="146">Zeller, Rod</option>
    <option value="180">Zeller, Rodd</option>
  </select>
);

const players = [];
options.forEach((option, index) => {
  if (index > 0) {
    // Skip the first option as it's a placeholder
    players.push({ name: option.textContent.trim(), indx: index });
  }
});

// Shuffle the index values
const shuffledIndices = players
  .map((player) => player.indx)
  .sort(() => Math.random() - 0.5);

// Assign the shuffled indices back to the players
players.forEach((player, index) => {
  player.indx = shuffledIndices[index];
});

// Output the JSON
const jsonOutput = JSON.stringify(players, null, 2);
console.log(jsonOutput);
